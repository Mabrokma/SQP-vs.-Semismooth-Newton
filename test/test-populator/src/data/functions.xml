<functions>

	<function>
		<name>quad_func</name>
		<var>x</var>
		<constant>
			<constant_name>xd</constant_name>
			<constant_value>3</constant_value>
		</constant>
		<def>y = norm(x-xd)^2;</def>
		<grad>g = 2*(x-xd);</grad>
		<hess>H = 2*eye(length(x));</hess>
	</function>
	
	<function>
		<name>exp_func</name>
		<var>x</var>
		<def>y = exp(norm(x)^2);</def>
		<grad>g = 2*exp_func(x)*x;</grad>
		<hess>
	n = length(x);
	efx = exp(norm(x)^2);
	H = 2*efx*eye(n);
	for k=1:n
		for l=1:n
			H(k,l) = H(k,l) + 4*efx*x(k)*x(l);
			end
	end
		</hess>
	</function>

	<function>
		<name>rosenbrock_func</name>
		<var>x</var>
		<def>y = 100*(x(2)-x(1)^2)^2+(1-x(1))^2;</def>
		<grad>g = [-400*x(1)*(x(2)-x(1)^2)-2*(1-x(1)); 200*(x(2)-x(1)^2)];</grad>
		<hess>
	H = [ 1200*x(1)^2-400*x(2)+2  -400*x(1);
              -400*x(1)              200  ];
        </hess>
	</function>

	<function>
		<name>himmelblau_func</name>
		<var>x</var>
		<def>y = (x(1)^2+x(2)-11)^2 + (x(1)+x(2)^2-7)^2;</def>
		<grad>
	g = [ 4*x(1)*(x(1)^2+x(2)-11) + 2*(x(1)+x(2)^2-7);
		  2*(x(1)^2+x(2)-11) + 4*x(2)*(x(1)+x(2)^2-7) ];
		</grad>
		<hess>
	H = [ 12*x(1)^2+4*x(2)-42    4*(x(1)+x(2));
             4*(x(1)+x(2))    4*x(1)+12*x(2)^2-26  ];
        </hess>
	</function>
	
	<function>
		<name>bazaraa_shetty_func</name>
		<var>x</var>
		<def>y = (x(1)-2)^4+(x(1)-2*x(2))^2;</def>
		<grad>
	g = [ 4*(x(1)-2)^3+2*x(1)-4*x(2);
	         -4*x(1)+8*x(2) ];
		</grad>
		<hess>
	H = [ 12*(x(1)-2)^2+2  -4;
               -4           8 ];
        </hess>
	</function>
	
</functions>