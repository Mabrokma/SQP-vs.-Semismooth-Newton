<problems>

	<problem>
		<function_name>quad_func</function_name>
		<constant>
			<constant_name>Q</constant_name>
			<constant_value>2*eye(2)</constant_value>
		</constant>
		<constant>
			<constant_name>q</constant_name>
			<constant_value>-2*[4; 7]</constant_value>
		</constant>
		<a>[3; 6]</a>
		<b>[10; 20]</b>
		<x0>[8; 17]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>100</max_iteration>
	</problem>

	<problem>
		<function_name>quad_func</function_name>
		<constant>
			<constant_name>Q</constant_name>
			<constant_value>[2 0; 0 2]</constant_value>
		</constant>
		<constant>
			<constant_name>q</constant_name>
			<constant_value>[-4; -4]</constant_value>
		</constant>
		<a>[-1; -1]</a>
		<b>[1; 2]</b>
		<x0>[-1; 0]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>100</max_iteration>
	</problem>

	<problem>
		<function_name>quad_func</function_name>
		<constant>
			<constant_name>Q</constant_name>
			<constant_value>[2 0; 0 2]</constant_value>
		</constant>
		<constant>
			<constant_name>q</constant_name>
			<constant_value>[-4; -4]</constant_value>
		</constant>
		<G>[2 1; 1 -1; -1 -1; -2 1]</G>
		<r>[2; 1; 1; 2]</r>
		<x0>[-1; 0]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>100</max_iteration>
	</problem>

	<problem>
		<function_name>norm_func</function_name>
		<constant>
			<constant_name>xd</constant_name>
			<constant_value>[4; 7]</constant_value>
		</constant>
		<a>[3; 6]</a>
		<b>[10; 20]</b>
		<x0>[8; 17]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>100</max_iteration>
	</problem>

    <problem>
        <function_name>norm_func</function_name>
        <constant>
            <constant_name>xd</constant_name>
            <constant_value>[4; 7; 10]</constant_value>
        </constant>
        <a>[3; 6; 2]</a>
        <b>[10; 20; 5]</b>
        <x0>[8; 17; 4]</x0>
        <tolerance>0.001</tolerance>
        <max_iteration>100</max_iteration>
    </problem>

	<!--problem>
		<function_name>linear_func</function_name>
		<constant>
			<constant_name>c</constant_name>
			<constant_value>[1; -1; 1; -1]</constant_value>
		</constant>
		<a>[0; 0; 0; 0]</a>
		<b>[10; 10; 10; 10]</b>
		<x0>[5; 5; 5; 5]</x0>
		<tolerance>0.01</tolerance>
		<max_iteration>100</max_iteration>
	</problem-->

    <!--problem>
        <function_name>exp_func</function_name>
        <a>[-10; -2; -4]</a>
        <b>[10; 20; 4]</b>
        <x0>[5; 2; 4]</x0>
        <tolerance>0.001</tolerance>
        <max_iteration>500</max_iteration>
    </problem>

    <problem>
        <function_name>exp_func</function_name>
        <a>[1; 0.5; 1]</a>
        <b>[10; 20; 4]</b>
        <x0>[5; 2; 4]</x0>
        <tolerance>0.001</tolerance>
        <max_iteration>500</max_iteration>
    </problem-->

	<problem>
		<function_name>rosenbrock_func</function_name>
		<a>[-10; -10]</a>
		<b>[10; 10]</b>
		<x0>[-1; 2]</x0>
		<tolerance>0.0001</tolerance>
		<max_iteration>100</max_iteration>
	</problem>

	<problem>
		<function_name>rosenbrock_func</function_name>
		<a>[-10; 1.5]</a>
		<b>[10; 10]</b>
		<x0>[1; 3]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>100</max_iteration>
	</problem>

	<problem>
		<function_name>himmelblau_func</function_name>
		<a>[-20; -20]</a>
		<b>[20; 20]</b>
		<x0>[5; 5]</x0>
		<tolerance>0.0001</tolerance>
		<max_iteration>200</max_iteration>
	</problem>

    <problem>
        <function_name>himmelblau_func</function_name>
        <a>[5; 5]</a>
        <b>[20; 20]</b>
        <x0>[15; 15]</x0>
        <tolerance>0.0001</tolerance>
        <max_iteration>100</max_iteration>
    </problem>
	
	<problem>
		<function_name>bazaraa_shetty_func</function_name>
		<a>[-20; -20]</a>
		<b>[20; 20]</b>
		<x0>[5; 5]</x0>
		<tolerance>0.0001</tolerance>
		<max_iteration>100</max_iteration>
	</problem>

	<problem>
		<function_name>beale_func</function_name>
		<a>[-20; -20]</a>
		<b>[20; 20]</b>
		<x0>[5; 0]</x0>
		<tolerance>0.0001</tolerance>
		<max_iteration>100</max_iteration>
	</problem>

	<!--problem>
		<function_name>spellucci_func</function_name>
		<a>[-20; -20]</a>
		<b>[20; 20]</b>
		<x0>[-5; -5]</x0>
		<tolerance>0.0001</tolerance>
		<max_iteration>100</max_iteration>
	</problem-->
	
	<!--problem>
		<function_name>schuldt_func</function_name>
		<a>[-10; 0]</a>
		<b>[10; 10]</b>
		<x0>[0.7;0.5]</x0>
		<tolerance>0.0001</tolerance>
		<max_iteration>100</max_iteration>
	</problem-->
	
	<!--problem>
		<function_name>asaadi_func</function_name>
		<a>[1; 0]</a>
		<b>[20; 20]</b>
		<x0>[7; 5]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>100</max_iteration>
	</problem-->
	
	<problem>
		<function_name>mccormick_func</function_name>
		<a>[-1.5; -3]</a>
		<b>[4; 3]</b>
		<x0>[0; -0.75]</x0>
		<tolerance>0.0001</tolerance>
		<max_iteration>200</max_iteration>
	</problem>
	
	<!--problem>
		<function_name>holzmann_func</function_name>
		<a>[0.1; 0; 0]</a>
		<b>[100; 25.6; 5]</b>
		<x0>[100; 12.5; 3]</x0>
		<tolerance>0.0001</tolerance>
		<max_iteration>200</max_iteration>
	</problem-->

	<problem>
		<function_name>dixon_2_dim_func</function_name>
		<a>[-10; -10]</a>
		<b>[10; 10]</b>
		<x0>[1.5; 1.5]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>500</max_iteration>
	</problem>
	
	<problem>
		<function_name>dixon_2_dim_func</function_name>
		<a>[-10; -10]</a>
		<b>[2; -5]</b>
		<x0>[-6; -7]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>500</max_iteration>
	</problem>

	<problem>
		<function_name>dixon_3_dim_func</function_name>
		<a>[-10; -10; -10]</a>
		<b>[10; 10; 10]</b>
		<x0>[1.5; 1.5; 1.5]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>500</max_iteration>
	</problem>

	<!--problem>
		<function_name>dixon_func</function_name>
		<a>[-10; -10; -10; -10; -10; -10; -10; -10; -10; -10]</a>
		<b>[10; 10; 10; 10; 10; 10; 10; 10; 10; 10]</b>
		<x0>[10; 10; 10; 10; 10; 10; 10; 10; 10; 10]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>500</max_iteration>
	</problem>

	<problem>
		<function_name>dixon_func</function_name>
		<a>[2; -10; -10; -10; -10; -10; -10; -10; -10; -10]</a>
		<b>[10; 10; 10; 10; 10; 10; 10; 10; 10; 10]</b>
		<x0>[10; 10; 10; 10; 10; 10; 10; 10; 10; 10]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>500</max_iteration>
	</problem>
	
	<problem>
		<function_name>dixon_func</function_name>
		<a>[3; 3; 3; 3; 3; 2; 2; 2; 2; 2]</a>
		<b>[10; 10; 10; 10; 10; 10; 10; 10; 10; 10]</b>
		<x0>[10; 10; 10; 10; 10; 10; 10; 10; 10; 10]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>500</max_iteration>
	</problem>

	<problem>
		<function_name>dixon_func</function_name>
		<a>[-10; -10; -10; -10; -10; -10; -10; -10; -10; -10]</a>
		<b>[-5; -5; -5; -5; -5; -5; -5; -5; -5; -5]</b>
		<x0>[-10; -10; -10; -10; -10; -10; -10; -10; -10; -10]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>500</max_iteration>
	</problem>
	
	<problem>
		<function_name>dixon_func</function_name>
        <constant>
            <constant_name>n</constant_name>
            <constant_value>5</constant_value>
        </constant>
		<a>[3; -3; 5; 3; 2]</a>
		<b>[7; 0; 5; 10; 14]</b>
		<x0>[4; -1; 5; 4; 7]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>500</max_iteration>
	</problem-->

	<!--problem>
		<function_name>dixon_func</function_name>
        <constant>
            <constant_name>n</constant_name>
            <constant_value>20</constant_value>
        </constant>
		<a>[-10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10]</a>
		<b>[10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10]</b>
		<x0>[10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>500</max_iteration>
	</problem>

	<problem>
		<function_name>dixon_func</function_name>
        <constant>
            <constant_name>n</constant_name>
            <constant_value>20</constant_value>
        </constant>
		<a>[-10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10]</a>
		<b>[-5; -5; -5; -5; -5; -5; -5; -5; -5; -5; -5; -5; -5; -5; -5; -5; -5; -5; -5; -5 ]</b>
		<x0>[-10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10; -10]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>500</max_iteration>
	</problem>

	<problem>
		<function_name>dixon_func</function_name>
        <constant>
            <constant_name>n</constant_name>
            <constant_value>40</constant_value>
        </constant>
		<a>[2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2; 2]</a>
		<b>[10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10]</b>
		<x0>[10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10; 10]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>500</max_iteration>
	</problem-->
	
	<problem>
		<function_name>colville_func</function_name>
		<a>[-10; -10; -10; -10]</a>
		<b>[10; 10; 10; 10]</b>
		<x0>[3; -1; -3; -1]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>100</max_iteration>
	</problem>
	
	<problem>
		<function_name>betts_func</function_name>
		<a>[0.25; 0.25]</a>
		<b>[2; 2]</b>
		<x0>[1; 1.5]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>100</max_iteration>
	</problem>
	
	<problem>
		<function_name>paviani_func</function_name>
		<a>[3; 3]</a>
		<b>[9; 9]</b>
		<x0>[4; 5]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>100</max_iteration>
	</problem>
	
	<problem>
		<function_name>paviani_func</function_name>
		<a>[3; 3]</a>
		<b>[9; 9]</b>
		<x0>[6; 6]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>100</max_iteration>
	</problem>
	
	<!--problem>
		<function_name>lin_regression_func</function_name>
		<a>[-20; -20]</a>
		<b>[20; 20]</b>
		<x0>[1; 1]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>100</max_iteration>
	</problem-->

	<problem>
		<function_name>lin_regression_func</function_name>
		<constant>
			<constant_name>eta</constant_name>
			<constant_value>[-0.5; -2; -3; -3; -2.5; -2; -1; 1; 3; 5.5]</constant_value>
		</constant>
		<a>[-20; -20]</a>
		<b>[20; 20]</b>
		<x0>[-20; 20]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>100</max_iteration>
	</problem>

	<!--problem>
		<function_name>quad_regression_func</function_name>
		<a>[-10; -10; -10]</a>
		<b>[20; 20; 20]</b>
		<x0>[0.5; 2; -7]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>100</max_iteration>
	</problem-->

	<problem>
		<function_name>quad_regression_func</function_name>
		<constant>
			<constant_name>eta</constant_name>
			<constant_value>[-0.5; -2; -3; -3; -2.5; -2; -1; 1; 3; 5.5]</constant_value>
		</constant>
		<a>[-10; -10; -10]</a>
		<b>[20; 20; 20]</b>
		<x0>[1; 3; -4]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>100</max_iteration>
	</problem>
	
	<problem>
		<function_name>nichtlin_regression_func</function_name>
		<a>[-2; -2]</a>
		<b>[10; 10]</b>
		<x0>[0.2; 0.5]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>100</max_iteration>
	</problem>
	
	<!--problem>
		<function_name>nichtlin_regression_3_vars_func</function_name>
		<a>[-2; -2; -2]</a>
		<b>[10; 10; 10]</b>
		<x0>[0.29; 0.29; 0.6]</x0>
		<tolerance>0.001</tolerance>
		<max_iteration>100</max_iteration>
	</problem-->

</problems>